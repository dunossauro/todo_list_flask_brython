name: CI

on: [push, pull_request]

jobs:

  analise_estatica:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.9.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.2

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.create false --local
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Black
        run: poetry run black . --check

      - name: Xenon
        run: xenon --max-absolute A --max-modules A --max-average A .

  testes:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.9.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.2

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.create false --local
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run Pytest
        run: poetry run pytest --cov=app tests

      - name: Generate coverage.xml
        run: poetry run pytest --cov=app --cov-report xml tests

      - name: Send Coverage to Codecov
        uses: codecov/codecov-action@v1
